<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" org.eventb.core.generated="false" org.eventb.texttools.text_lastmodified="1651765172857" org.eventb.texttools.text_representation="machine Connect4Game sees C0&#10;&#10;variables&#10;&#9;row&#10;&#9;col&#10;&#9;win&#10;&#9;board&#10;&#9;fieldcell&#10;&#9;field&#10;&#9;winner&#10;&#9;current_player&#10;&#9;previous_player&#10;&#9;hline&#10;&#9;vline&#10;&#9;ddownline&#10;&#9;dupline&#10;&#9;// fieldfun fieldbvalue&#10;&#10;invariants&#10;  @inv1 row = 1‥ROW_CNT&#10;  @inv2 col = 1‥COL_CNT&#10;  @inv3 win ∈ BOOL&#10;  @inv4 board ∈ (col × row) → COLORS // JeB have problems to verify this&#10;  @inv fieldcell ∈ col × row&#10;  @invField field = col × row&#10;  @invWinner winner ∈ COLORS&#10;  @invPlayer current_player ∈ COLORS&#10;  @invPlayerPrev previous_player ∈ COLORS&#10;  @invPlayerChange current_player ≠ previous_player&#10;  @defineHLine hline ∈ COLORS&#10;  @lineOhterWay (∃c,r · c ∈ col ∧ c + 3 ∈ col ∧ board(c ↦ r) ≠ EMPTY ∧ board(c ↦ r) = board(c + 1 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 2 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 3 ↦ r)) ⇒ winner ≠ EMPTY&#10;  @defineHLineMade hline ≠ EMPTY ⇒ (∃r,c ·&#10;  &#9;(r ∈ row ∧&#10;  &#9;c ∈ col ∧&#10;  &#9;c + 3 ∈ col ∧&#10;  &#9;board(c ↦ r) = board(c + 1 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 2 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 3 ↦ r))) // This variable is not EMPTY if the horizontal line is winning&#10;  @defineVLine vline ∈ COLORS&#10;  @defineVLineMade vline ≠ EMPTY ⇒ (∃r,c ·&#10;  &#9;(r ∈ row ∧&#10;  &#9;c ∈ col ∧&#10;  &#9;r + 3 ∈ row ∧&#10;  &#9;board(c ↦ r) = board(c ↦ r + 1) ∧&#10;  &#9;board(c ↦ r) = board(c ↦ r + 2) ∧&#10;  &#9;board(c ↦ r) = board(c ↦ r + 3)))// This variable is not EMPTY if the vertical line is winning&#10;  @ddownline ddownline ∈ COLORS&#10;  @dupline dupline ∈ COLORS&#10;  @winner winner = EMPTY ⇒ vline = EMPTY ∧ hline = EMPTY ∧ ddownline = EMPTY ∧ dupline = EMPTY&#10;  @gameIsInProgress winner = EMPTY // JeB will stop autmatic run on invariantfail so this makes sure that we are managin running animation in case of winning&#10;  @boardIsNotFull ∃c · c ∈ col ∧ board(c ↦ 1) = EMPTY // JeB will stop autmatic run on invariantfail so this makes sure that we are managin running animation in case of full board&#10;&#10;events&#10;  event INITIALISATION&#10;    then&#10;      @act1 win ≔ FALSE&#10;      @act3 row ≔ 1‥ROW_CNT&#10;      @act4 col ≔ 1‥COL_CNT&#10;      @initField field ≔ 1‥COL_CNT × 1‥ROW_CNT&#10;      @act5 fieldcell ≔  1 ↦ 1&#10;      //@suchThatBoardSetup board :∣ ∀c,r · c ∈ 1‥COL_CNT ∧ r ∈ 1‥ROW_CNT ⇒  board'(c ↦ r) = EMPTY&#10;      //@suchThatBoardSetupModification board ≔ { c ∣ c ∈ 1 ‥ COL_CNT } × { r ∣ r ∈ 1 ‥ ROW_CNT } × { EMPTY }&#10;      @intiBoardOther board ≔  (1‥COL_CNT ×   1‥ROW_CNT ) × {EMPTY}&#10;      @initHLine hline ≔ EMPTY&#10;      @initVLine vline ≔ EMPTY&#10;      @initWinner winner ≔ EMPTY&#10;      @initCurrentPlayer current_player ≔ RED&#10;      @initPreviousPlayer previous_player ≔ BLUE&#10;&#9;  @initDLineDown ddownline ≔ EMPTY&#10;&#9;  @initDUpLine dupline ≔ EMPTY&#10;  end&#10;&#10;  event add_token&#10;  &#9;any&#10;  &#9;&#9;x&#10;  &#9;&#9;y&#10;&#9;where&#10;&#9;&#9;@grdX x ∈ col&#10;&#9;&#9;@grdRow y ∈ row&#10;&#9;&#9;@grdHaveEmptyPlace board(x ↦ 1) = EMPTY&#10;&#9;&#9;@grdPlaceEmpty board(x ↦ y) = EMPTY&#10;&#9;&#9;@grdLastEmptyRow y = ROW_CNT ∨ board(x ↦ y + 1) ≠ EMPTY&#10;&#9;&#9;@grdNoHLines ¬(∃r · r ∈ row ∧ (∃s,e · s ∈ col ∧ e ∈ col ∧ board(s ↦ r) ≠ EMPTY ∧ (e − s) + 1 = WIN_CNT ∧ (∀i · i ∈ s‥e ∧ board(s ↦ r) = board(i ↦ r))))&#10;&#9;&#9;@grdNoVLines ¬(∃c · c ∈ col ∧ (∃s,e · s ∈ row ∧ e ∈ row ∧ board(c ↦ s) ≠ EMPTY ∧ (e − s) + 1 = WIN_CNT ∧ (∀i · i ∈ s‥e ∧ board(c ↦ s) = board(c ↦ i))))&#10;&#9;&#9;@grdDDownLine ¬(∃c,r · (c ∈ col ∧ r ∈ row ∧ (∃x,y · (x ∈ col ∧ (x − c) + 1 = WIN_CNT ∧ y ∈ row ∧ (y − r) + 1 = WIN_CNT ∧ (∀i · (i ∈ c ‥ x ∧ (∃j · (j ∈ r ‥ y ∧ i − c = j − r ∧ board(i ↦ j) ≠ EMPTY ∧ board(i ↦ j) = board(c ↦ r)))))))))&#10;&#9;&#9;@grdDUpLine ¬(∃c,r · (c ∈ col ∧ r ∈ row ∧ (∃x,y · (x ∈ col ∧ (x − c) + 1 = WIN_CNT ∧ y ∈ row ∧ (r − y) + 1 = WIN_CNT ∧ (∀i · (i ∈ c ‥ x ∧ (∃j · (j ∈ y ‥ r ∧ i − c = r − j ∧ board(i ↦ j) ≠ EMPTY ∧ board(i ↦ j) = board(c ↦ r)))))))))&#10;&#9;then&#10;&#9;    @boardUpdate board(x ↦ y) ≔ current_player&#10;&#9;&#9;//@setValue board ≔ board  { y ↦ x ↦ current_player }&#10;&#9;&#9;// For other version for token adding to the board&#10;&#10;&#9;&#9;// @setLowest board :∣ ∀c, r · r ∈ row ∧ c ∈ col ∧&#10;&#9;&#9;//&#9;(&#10;&#9;&#9;//&#9;&#9;(c = x ∧ board(x ↦ r) = EMPTY ∧ board(x ↦ r + 1) ≠ EMPTY ⇒ board'(x ↦ r) = current_player)&#10;&#9;&#9;//&#9;&#9;∧ (c ≠ x ∨ board(x ↦ r) ≠ EMPTY ∨ board(x ↦ r + 1) = EMPTY ⇒ board'(c ↦ r) = board(c ↦ r))&#10;&#9;&#9;//&#9;)&#10;&#9;&#9;// For complicated becomesSuchThat generation testing&#10;&#10;&#9;&#9;//@setPosition board(x ↦ y) ≔ current_player&#10;&#9;&#9;@changePlayerPrev previous_player ≔ current_player&#10;&#9;&#9;@changePlayer current_player ≔ previous_player&#10;  end&#10;&#10;  event win_hline // Get horizontal line&#10;&#9;when&#10;&#9;&#9;@grdNotHappened hline = EMPTY&#10;&#9;&#9;@grdLineH ∃r · r ∈ row&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃s,e · (&#10;&#9;&#9;&#9;&#9;&#9;s ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ e ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ board(s ↦ r) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;∧ (e − s) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ s‥e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(s ↦ r) = board(i ↦ r)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;then&#10;&#9;&#9;@setWinLine hline ≔ previous_player&#10;&#9;&#9;@winTrue win ≔  bool(⊤)&#10;&#9;&#9;@setWin winner ≔ previous_player&#10;  end&#10;&#10;  event win_vline // Get vertical line&#10;&#9;when&#10;&#9;&#9;@grdNotHappened vline = EMPTY&#10;&#9;&#9;@grdLineH ∃c · (&#10;&#9;&#9;&#9;c ∈ col&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃s,e · (&#10;&#9;&#9;&#9;&#9;&#9;s ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ e ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ board(c ↦ s) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;∧ (e − s) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ s‥e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(c ↦ s) = board(c ↦ i)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;&#9;)&#10;&#9;then&#10;&#9;&#9;@setWinLine vline ≔ previous_player&#10;&#9;&#9;@winTrue win ≔  bool(⊤)&#10;&#9;&#9;@setWin winner ≔ previous_player&#10;  end&#10;&#10;  event win_dline_down // Get diagonal line going down&#10;&#9;when&#10;&#9;&#9;@grdNotHappened ddownline = EMPTY&#10;&#9;&#9;@grdDDownLine ∃c,r · (&#10;&#9;&#9;&#9;c ∈ col&#10;&#9;&#9;&#9;∧ r ∈ row&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃x,y · (&#10;&#9;&#9;&#9;&#9;&#9;x ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ (x − c) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ y ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ (y − r) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ c ‥ x&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∃j · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;j ∈ r‥y&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ i − c = j − r&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) = board(c ↦ r)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;&#9;)&#10;&#9;then&#10;&#9;&#9;@setWinLine ddownline ≔ previous_player&#10;&#9;&#9;@winTrue win ≔  bool(⊤)&#10;&#9;&#9;@setWin winner ≔ previous_player&#10;  end&#10;&#10;  event win_dline_up // Get diagonal line going up&#10;&#9;when&#10;&#9;&#9;@grdNotHappened dupline = EMPTY&#10;&#9;&#9;@grdDUpLine ∃c,r · (&#10;&#9;&#9;&#9;c ∈ col&#10;&#9;&#9;&#9;∧ r ∈ row&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃x,y · (&#10;&#9;&#9;&#9;&#9;&#9;x ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ (x − c) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ y ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ (r − y) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ c ‥ x&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∃j · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;j ∈ y‥r&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ i − c = r − j&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) = board(c ↦ r)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;&#9;)&#10;&#9;then&#10;&#9;&#9;@setWinLine dupline ≔ previous_player&#10;&#9;&#9;@winTrue win ≔  bool(⊤)&#10;&#9;&#9;@setWin winner ≔ previous_player&#10;  end&#10;end" version="5">
    <org.eventb.core.seesContext name="(" org.eventb.core.target="C0"/>
    <org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="_WzfRUMSnEeyX_5VAW912xQ" org.eventb.core.assignment="win ≔ FALSE" org.eventb.core.generated="false" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="_Wzf4YMSnEeyX_5VAW912xQ" org.eventb.core.assignment="row ≔ 1‥ROW_CNT" org.eventb.core.generated="false" org.eventb.core.label="act3"/>
        <org.eventb.core.action name="_Wzf4YcSnEeyX_5VAW912xQ" org.eventb.core.assignment="col ≔ 1‥COL_CNT" org.eventb.core.generated="false" org.eventb.core.label="act4"/>
        <org.eventb.core.action name="_WzgfcMSnEeyX_5VAW912xQ" org.eventb.core.assignment="field ≔ 1‥COL_CNT × 1‥ROW_CNT" org.eventb.core.generated="false" org.eventb.core.label="initField"/>
        <org.eventb.core.action name="_WzgfccSnEeyX_5VAW912xQ" org.eventb.core.assignment="fieldcell ≔  1 ↦ 1" org.eventb.core.comment="@suchThatBoardSetup board :∣ ∀c,r · c ∈ 1‥COL_CNT ∧ r ∈ 1‥ROW_CNT ⇒  board'(c ↦ r) = EMPTY&#10;@suchThatBoardSetupModification board ≔ { c ∣ c ∈ 1 ‥ COL_CNT } × { r ∣ r ∈ 1 ‥ ROW_CNT } × { EMPTY }" org.eventb.core.generated="false" org.eventb.core.label="act5"/>
        <org.eventb.core.action name="_WzhGgMSnEeyX_5VAW912xQ" org.eventb.core.assignment="board ≔  (1‥COL_CNT ×   1‥ROW_CNT ) × {EMPTY}" org.eventb.core.generated="false" org.eventb.core.label="intiBoardOther"/>
        <org.eventb.core.action name="_E8pxoMSyEeyX_5VAW912xQ" org.eventb.core.assignment="hline ≔ EMPTY" org.eventb.core.generated="false" org.eventb.core.label="initHLine"/>
        <org.eventb.core.action name="_E8qYsMSyEeyX_5VAW912xQ" org.eventb.core.assignment="vline ≔ EMPTY" org.eventb.core.generated="false" org.eventb.core.label="initVLine"/>
        <org.eventb.core.action name="_WzhtkMSnEeyX_5VAW912xQ" org.eventb.core.assignment="winner ≔ EMPTY" org.eventb.core.generated="false" org.eventb.core.label="initWinner"/>
        <org.eventb.core.action name="_WzhtkcSnEeyX_5VAW912xQ" org.eventb.core.assignment="current_player ≔ RED" org.eventb.core.generated="false" org.eventb.core.label="initCurrentPlayer"/>
        <org.eventb.core.action name="_WziUoMSnEeyX_5VAW912xQ" org.eventb.core.assignment="previous_player ≔ BLUE" org.eventb.core.generated="false" org.eventb.core.label="initPreviousPlayer"/>
        <org.eventb.core.action name="_MsMU8MxtEeyNArnxjlSewQ" org.eventb.core.assignment="ddownline ≔ EMPTY" org.eventb.core.generated="false" org.eventb.core.label="initDLineDown"/>
        <org.eventb.core.action name="_K0pAoMxxEeyNArnxjlSewQ" org.eventb.core.assignment="dupline ≔ EMPTY" org.eventb.core.generated="false" org.eventb.core.label="initDUpLine"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name=")" org.eventb.core.generated="false" org.eventb.core.identifier="row"/>
    <org.eventb.core.invariant name="*" org.eventb.core.generated="false" org.eventb.core.label="inv1" org.eventb.core.predicate="row = 1‥ROW_CNT"/>
    <org.eventb.core.variable name="+" org.eventb.core.generated="false" org.eventb.core.identifier="col"/>
    <org.eventb.core.invariant name="," org.eventb.core.generated="false" org.eventb.core.label="inv2" org.eventb.core.predicate="col = 1‥COL_CNT"/>
    <org.eventb.core.variable name="_WzjiwMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="win"/>
    <org.eventb.core.variable name="_WzkJ0MSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="board"/>
    <org.eventb.core.variable name="_Wzkw4MSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="fieldcell"/>
    <org.eventb.core.variable name="_Wzkw4cSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="field"/>
    <org.eventb.core.variable name="_Wzkw4sSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="winner"/>
    <org.eventb.core.variable name="_WzlX8MSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="current_player"/>
    <org.eventb.core.variable name="_WzlX8cSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="previous_player"/>
    <org.eventb.core.invariant name="_WzmmEMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="inv3" org.eventb.core.predicate="win ∈ BOOL"/>
    <org.eventb.core.invariant name="_WznNIMSnEeyX_5VAW912xQ" org.eventb.core.comment="JeB have problems to verify this" org.eventb.core.generated="false" org.eventb.core.label="inv4" org.eventb.core.predicate="board ∈ (col × row) → COLORS"/>
    <org.eventb.core.invariant name="_WznNIcSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="inv" org.eventb.core.predicate="fieldcell ∈ col × row"/>
    <org.eventb.core.invariant name="_Wzn0MMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="invField" org.eventb.core.predicate="field = col × row"/>
    <org.eventb.core.invariant name="_WzobQMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="invWinner" org.eventb.core.predicate="winner ∈ COLORS"/>
    <org.eventb.core.invariant name="_WzobQcSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="invPlayer" org.eventb.core.predicate="current_player ∈ COLORS"/>
    <org.eventb.core.invariant name="_WzppYMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="invPlayerPrev" org.eventb.core.predicate="previous_player ∈ COLORS"/>
    <org.eventb.core.invariant name="_WzppYcSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="invPlayerChange" org.eventb.core.predicate="current_player ≠ previous_player"/>
    <org.eventb.core.event name="_WzsFocSnEeyX_5VAW912xQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="add_token">
        <org.eventb.core.parameter name="_WzsssMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="x"/>
        <org.eventb.core.parameter name="_WztTwMSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="y"/>
        <org.eventb.core.guard name="_WztTwcSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="grdX" org.eventb.core.predicate="x ∈ col"/>
        <org.eventb.core.guard name="_Wzt60MSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="grdRow" org.eventb.core.predicate="y ∈ row"/>
        <org.eventb.core.guard name="_Wzt60cSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="grdHaveEmptyPlace" org.eventb.core.predicate="board(x ↦ 1) = EMPTY"/>
        <org.eventb.core.guard name="_Wzuh4MSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="grdPlaceEmpty" org.eventb.core.predicate="board(x ↦ y) = EMPTY"/>
        <org.eventb.core.guard name="_Wzuh4cSnEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="grdLastEmptyRow" org.eventb.core.predicate="y = ROW_CNT ∨ board(x ↦ y + 1) ≠ EMPTY"/>
        <org.eventb.core.action name="_7RtT4MVBEeyYAp3mDCXbkg" org.eventb.core.assignment="board(x ↦ y) ≔ current_player" org.eventb.core.comment="@setValue board ≔ board  { y ↦ x ↦ current_player }&#10;For other version for token adding to the board&#10;@setLowest board :∣ ∀c, r · r ∈ row ∧ c ∈ col ∧&#10;&#9;(&#10;&#9;&#9;(c = x ∧ board(x ↦ r) = EMPTY ∧ board(x ↦ r + 1) ≠ EMPTY ⇒ board'(x ↦ r) = current_player)&#10;&#9;&#9;∧ (c ≠ x ∨ board(x ↦ r) ≠ EMPTY ∨ board(x ↦ r + 1) = EMPTY ⇒ board'(c ↦ r) = board(c ↦ r))&#10;&#9;)&#10;For complicated becomesSuchThat generation testing&#10;@setPosition board(x ↦ y) ≔ current_player" org.eventb.core.generated="false" org.eventb.core.label="boardUpdate"/>
        <org.eventb.core.action name="_WzvI8cSnEeyX_5VAW912xQ" org.eventb.core.assignment="previous_player ≔ current_player" org.eventb.core.generated="false" org.eventb.core.label="changePlayerPrev"/>
        <org.eventb.core.action name="_A-UAkMYiEeyYAp3mDCXbkg" org.eventb.core.assignment="current_player ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="changePlayer"/>
        <org.eventb.core.guard name="_OdhokMbvEeyCDtbpLjUwJA" org.eventb.core.generated="false" org.eventb.core.label="grdNoHLines" org.eventb.core.predicate="¬(∃r · r ∈ row ∧ (∃s,e · s ∈ col ∧ e ∈ col ∧ board(s ↦ r) ≠ EMPTY ∧ (e − s) + 1 = WIN_CNT ∧ (∀i · i ∈ s‥e ∧ board(s ↦ r) = board(i ↦ r))))"/>
        <org.eventb.core.guard name="_OdhokcbvEeyCDtbpLjUwJA" org.eventb.core.generated="false" org.eventb.core.label="grdNoVLines" org.eventb.core.predicate="¬(∃c · c ∈ col ∧ (∃s,e · s ∈ row ∧ e ∈ row ∧ board(c ↦ s) ≠ EMPTY ∧ (e − s) + 1 = WIN_CNT ∧ (∀i · i ∈ s‥e ∧ board(c ↦ s) = board(c ↦ i))))"/>
        <org.eventb.core.guard name="_fnlA4MxtEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdDDownLine" org.eventb.core.predicate="¬(∃c,r · (c ∈ col ∧ r ∈ row ∧ (∃x,y · (x ∈ col ∧ (x − c) + 1 = WIN_CNT ∧ y ∈ row ∧ (y − r) + 1 = WIN_CNT ∧ (∀i · (i ∈ c ‥ x ∧ (∃j · (j ∈ r ‥ y ∧ i − c = j − r ∧ board(i ↦ j) ≠ EMPTY ∧ board(i ↦ j) = board(c ↦ r)))))))))"/>
        <org.eventb.core.guard name="_qNB_0MxxEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdDUpLine" org.eventb.core.predicate="¬(∃c,r · (c ∈ col ∧ r ∈ row ∧ (∃x,y · (x ∈ col ∧ (x − c) + 1 = WIN_CNT ∧ y ∈ row ∧ (r − y) + 1 = WIN_CNT ∧ (∀i · (i ∈ c ‥ x ∧ (∃j · (j ∈ y ‥ r ∧ i − c = r − j ∧ board(i ↦ j) ≠ EMPTY ∧ board(i ↦ j) = board(c ↦ r)))))))))"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="_E8tcAMSyEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="hline"/>
    <org.eventb.core.variable name="_E8tcAcSyEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.identifier="vline"/>
    <org.eventb.core.invariant name="_E8tcAsSyEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="defineHLine" org.eventb.core.predicate="hline ∈ COLORS"/>
    <org.eventb.core.invariant name="_1qSlYMSyEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="lineOhterWay" org.eventb.core.predicate="(∃c,r · c ∈ col ∧ c + 3 ∈ col ∧ board(c ↦ r) ≠ EMPTY ∧ board(c ↦ r) = board(c + 1 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 2 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 3 ↦ r)) ⇒ winner ≠ EMPTY"/>
    <org.eventb.core.invariant name="_E8uDEMSyEeyX_5VAW912xQ" org.eventb.core.comment="This variable is not EMPTY if the horizontal line is winning" org.eventb.core.generated="false" org.eventb.core.label="defineHLineMade" org.eventb.core.predicate="hline ≠ EMPTY ⇒ (∃r,c ·&#10;  &#9;(r ∈ row ∧&#10;  &#9;c ∈ col ∧&#10;  &#9;c + 3 ∈ col ∧&#10;  &#9;board(c ↦ r) = board(c + 1 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 2 ↦ r) ∧&#10;  &#9;board(c ↦ r) = board(c + 3 ↦ r)))"/>
    <org.eventb.core.invariant name="_E8uDEcSyEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="defineVLine" org.eventb.core.predicate="vline ∈ COLORS"/>
    <org.eventb.core.invariant name="_E8uqIMSyEeyX_5VAW912xQ" org.eventb.core.comment="This variable is not EMPTY if the vertical line is winning" org.eventb.core.generated="false" org.eventb.core.label="defineVLineMade" org.eventb.core.predicate="vline ≠ EMPTY ⇒ (∃r,c ·&#10;  &#9;(r ∈ row ∧&#10;  &#9;c ∈ col ∧&#10;  &#9;r + 3 ∈ row ∧&#10;  &#9;board(c ↦ r) = board(c ↦ r + 1) ∧&#10;  &#9;board(c ↦ r) = board(c ↦ r + 2) ∧&#10;  &#9;board(c ↦ r) = board(c ↦ r + 3)))"/>
    <org.eventb.core.invariant name="_MsPYQMxtEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="ddownline" org.eventb.core.predicate="ddownline ∈ COLORS"/>
    <org.eventb.core.invariant name="_K0rc4MxxEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="dupline" org.eventb.core.predicate="dupline ∈ COLORS"/>
    <org.eventb.core.invariant name="_E8uqIsSyEeyX_5VAW912xQ" org.eventb.core.generated="false" org.eventb.core.label="winner" org.eventb.core.predicate="winner = EMPTY ⇒ vline = EMPTY ∧ hline = EMPTY ∧ ddownline = EMPTY ∧ dupline = EMPTY"/>
    <org.eventb.core.event name="_RSKFoMbqEeyCDtbpLjUwJA" org.eventb.core.comment="Get horizontal line" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="win_hline">
        <org.eventb.core.guard name="_P0LfwMxQEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdNotHappened" org.eventb.core.predicate="hline = EMPTY"/>
        <org.eventb.core.guard name="_RSKssMbqEeyCDtbpLjUwJA" org.eventb.core.generated="false" org.eventb.core.label="grdLineH" org.eventb.core.predicate="∃r · r ∈ row&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃s,e · (&#10;&#9;&#9;&#9;&#9;&#9;s ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ e ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ board(s ↦ r) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;∧ (e − s) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ s‥e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(s ↦ r) = board(i ↦ r)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)"/>
        <org.eventb.core.action name="_RSKsscbqEeyCDtbpLjUwJA" org.eventb.core.assignment="hline ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWinLine"/>
        <org.eventb.core.action name="_m_bqYMbqEeyCDtbpLjUwJA" org.eventb.core.assignment="win ≔  bool(⊤)" org.eventb.core.generated="false" org.eventb.core.label="winTrue"/>
        <org.eventb.core.action name="_kWOMccbqEeyCDtbpLjUwJA" org.eventb.core.assignment="winner ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWin"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="_FaCO0MbvEeyCDtbpLjUwJA" org.eventb.core.comment="Get vertical line" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="win_vline">
        <org.eventb.core.action name="_FaC14cbvEeyCDtbpLjUwJA" org.eventb.core.assignment="vline ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWinLine"/>
        <org.eventb.core.guard name="_P0MG0MxQEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdNotHappened" org.eventb.core.predicate="vline = EMPTY"/>
        <org.eventb.core.guard name="_rzI4oMoZEeyWbJxOygHosw" org.eventb.core.generated="false" org.eventb.core.label="grdLineH" org.eventb.core.predicate="∃c · (&#10;&#9;&#9;&#9;c ∈ col&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃s,e · (&#10;&#9;&#9;&#9;&#9;&#9;s ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ e ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ board(c ↦ s) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;∧ (e − s) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ s‥e&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(c ↦ s) = board(c ↦ i)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;&#9;)"/>
        <org.eventb.core.action name="_gVmgIMxPEeyNArnxjlSewQ" org.eventb.core.assignment="win ≔  bool(⊤)" org.eventb.core.generated="false" org.eventb.core.label="winTrue"/>
        <org.eventb.core.action name="_gVmgIcxPEeyNArnxjlSewQ" org.eventb.core.assignment="winner ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWin"/>
    </org.eventb.core.event>
    <org.eventb.core.invariant name="_H7b6gMxTEeyNArnxjlSewQ" org.eventb.core.comment="JeB will stop autmatic run on invariantfail so this makes sure that we are managin running animation in case of winning" org.eventb.core.generated="false" org.eventb.core.label="gameIsInProgress" org.eventb.core.predicate="winner = EMPTY"/>
    <org.eventb.core.invariant name="_euh30MxTEeyNArnxjlSewQ" org.eventb.core.comment="JeB will stop autmatic run on invariantfail so this makes sure that we are managin running animation in case of full board" org.eventb.core.generated="false" org.eventb.core.label="boardIsNotFull" org.eventb.core.predicate="∃c · c ∈ col ∧ board(c ↦ 1) = EMPTY"/>
    <org.eventb.core.variable name="_MsQmYMxtEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.identifier="ddownline"/>
    <org.eventb.core.event name="_MsQmYcxtEeyNArnxjlSewQ" org.eventb.core.comment="Get diagonal line going down" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="win_dline_down">
        <org.eventb.core.guard name="_6s84QMxYEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdNotHappened" org.eventb.core.predicate="ddownline = EMPTY"/>
        <org.eventb.core.guard name="_bx0a0MxuEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdDDownLine" org.eventb.core.predicate="∃c,r · (&#10;&#9;&#9;&#9;c ∈ col&#10;&#9;&#9;&#9;∧ r ∈ row&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃x,y · (&#10;&#9;&#9;&#9;&#9;&#9;x ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ (x − c) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ y ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ (y − r) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ c ‥ x&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∃j · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;j ∈ r‥y&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ i − c = j − r&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) = board(c ↦ r)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;&#9;)"/>
        <org.eventb.core.action name="_6s84QsxYEeyNArnxjlSewQ" org.eventb.core.assignment="ddownline ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWinLine"/>
        <org.eventb.core.action name="_6s84Q8xYEeyNArnxjlSewQ" org.eventb.core.assignment="win ≔  bool(⊤)" org.eventb.core.generated="false" org.eventb.core.label="winTrue"/>
        <org.eventb.core.action name="_6s84RMxYEeyNArnxjlSewQ" org.eventb.core.assignment="winner ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWin"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="_K0srAMxxEeyNArnxjlSewQ" org.eventb.core.comment="fieldfun fieldbvalue" org.eventb.core.generated="false" org.eventb.core.identifier="dupline"/>
    <org.eventb.core.event name="_K0srAcxxEeyNArnxjlSewQ" org.eventb.core.comment="Get diagonal line going up" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.generated="false" org.eventb.core.label="win_dline_up">
        <org.eventb.core.guard name="_K0tSEMxxEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdNotHappened" org.eventb.core.predicate="dupline = EMPTY"/>
        <org.eventb.core.guard name="_AZ1Q0MyAEeyNArnxjlSewQ" org.eventb.core.generated="false" org.eventb.core.label="grdDUpLine" org.eventb.core.predicate="∃c,r · (&#10;&#9;&#9;&#9;c ∈ col&#10;&#9;&#9;&#9;∧ r ∈ row&#10;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;∃x,y · (&#10;&#9;&#9;&#9;&#9;&#9;x ∈ col&#10;&#9;&#9;&#9;&#9;&#9;∧ (x − c) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ y ∈ row&#10;&#9;&#9;&#9;&#9;&#9;∧ (r − y) + 1 = WIN_CNT&#10;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;∀i · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;i ∈ c ‥ x&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∃j · (&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;j ∈ y‥r&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ i − c = r − j&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) ≠ EMPTY&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;∧ board(i ↦ j) = board(c ↦ r)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;&#9;)&#10;&#9;&#9;&#9;)&#10;&#9;&#9;)"/>
        <org.eventb.core.action name="_K0tSEsxxEeyNArnxjlSewQ" org.eventb.core.assignment="dupline ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWinLine"/>
        <org.eventb.core.action name="_K0tSE8xxEeyNArnxjlSewQ" org.eventb.core.assignment="win ≔  bool(⊤)" org.eventb.core.generated="false" org.eventb.core.label="winTrue"/>
        <org.eventb.core.action name="_K0tSFMxxEeyNArnxjlSewQ" org.eventb.core.assignment="winner ≔ previous_player" org.eventb.core.generated="false" org.eventb.core.label="setWin"/>
    </org.eventb.core.event>
</org.eventb.core.machineFile>
